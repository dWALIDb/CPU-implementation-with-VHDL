ldsp FF
ldi 11
.loop:
ei (get_number)
cp 13
jpe (gcd)
jp (loop)
.gcd:
ldr <00>       ############### detect zero on operand #########
adr <01>
cpr <00>
jpe (done)
cpr <01>
jpe (done)     ##################### end of detection#################
ldr <00>
cpr <01>
jpe (done)
jpl (lower)
jpg (greater)
jp (gcd)
.greater:
sbr <01>
rla <00>
jp (gcd)
.lower:
ldr <01>
sbr <00>
rla <01>
jp (gcd)
.done:
outa <0F>
ldi FF
call (two_sec_delay)
call (two_sec_delay)
call (RESET_PROGRAM)
jp (00)
######################################### end of main program #####################################
.get_number:
pushflag
call (two_sec_delay)
pctoix
get <00>
inr <0>,<0>
incix
indexedstr
incix
incix
indexedstr
inc
popflag
ret
.RESET_PROGRAM:      ### ix is not changed so we set it back to initail value then we set get and inr operands to point to reference "0"
offsetix FE
ldi 00
indexedstr
incix
incix
indexedstr
ret
& 190
.two_sec_delay:     ########### used to set some delay when using interrupts and to reset the program at the end.
pushreg <00>
pushreg <01>
pushreg <02>
rli <02>,2C
.loop1: 
rli <01>,FF
.loop0:
rli <00>,FF
.delay:
nop 
decr <00> 
jpnz (delay) 
nop 
decr <01> 
jpnz (loop0) 
nop 
decr <02> 
jpnz (loop1)
popreg <02>
popreg <01> 
popreg <00> 
ret